#!/usr/bin/perl

my $test_count;

BEGIN {
    chdir($1) if ($0=~/(.*)\//);
    mkdir("tmp");
    $test_count = 9;
}

use Cwd;
use Test::More tests=>$test_count;
use Time::HiRes qw(sleep time);

my $tmpdir = cwd() . "/tmp";

`rm -rf $tmpdir/grun-test.*`;

my $CONF = "$tmpdir/grun-test.conf";

mkdir "$tmpdir/grun-test.spool";

ok(-d "$tmpdir/grun-test.spool", "grun spool");

my $cwd = cwd();

open O, ">$CONF";
print O <<"EOF";
master:         127.0.0.1
port:           29912
services:       queue,exec
log_file:       $tmpdir/grun-test.log
spool:          $tmpdir/grun-test.spool
pid_file:       $tmpdir/grun-test.pid
cpus:           4
env:            *
auto_profile:   /etc/grun.prof
expire_secs:    1200
spread_pct:     .05
query_default:  \$self
log_types:      note error warn debug
param-io:       8
trace:          2
EOF

#my $grun="~/clipper/grun-zmq -C $CONF";
my $grun="../grun -C $CONF";

is(system("$grun -d 2> tmp/grun-test.d.err"),0,"grun daemon");

sleep(.25);

$pid =0+`cat $tmpdir/grun-test.pid`;
cmp_ok($pid,">",1,"grun pid");

SKIP: {
    skip "grun won't start", $test_count-2 unless $pid > 1; 

    diag("$grun echo hello");
    $out=`$grun echo hello`;

    is($out, "hello\n", "hello works");

    $out=`$grun "yes | head -100" > $tmpdir/grun-test.pipe`

    local $SIG{ALRM} = sub { kill $pid }; 

    my $count=50;
    open O, ">$tmpdir/grun-test.fork.sh";
    for ($i=0;$i<$count;++$i) {
        print O "$grun echo $i >> $tmpdir/grun-test.fork.out 2>&1 &\n";
    }
    print O "wait\n";
    close O;

    $took_too_long=0;

    if (!($pid = fork)) {
        # run a bunch of simultaneous gruns
        exec("bash $tmpdir/grun-test.fork.sh");
    } else {
        use POSIX ":sys_wait_h";
        # wait for a while
        $start=time();
        diag("fork/timing test wait");
        while(waitpid($pid, WNOHANG)!=$pid) {
            sleep(.25);
            if (time() > $start+600) {
                $took_too_long=1;
                diag("took too long, killing");
                kill 2, $pid;
            }
        }
    }

    $count=200;
    for ($i=0;$i<$count;++$i) {
        `$grun -nowait 'echo $i >> $tmpdir/grun-test.nofork.out 2>&1'`;
    }

    while(1) {
        sleep(.25);
        if (time() > $start+600) {
            $took_too_long=1;
            diag("took too long!");
        }
    }
    ok(!$took_too_long, "grun nofork speed");
    cmp_ok(0+`wc -l $tmpdir/grun-test.nofork.out`, "==", $count, "got $count responses");

    is(system("$grun -d -k"),0,"grun daemon kill");

    # linger
    sleep(1.1);

    $running = `pgrep -f $tmpdir/grun`;
    chomp($running);
    ok(!$running, "daemon stop worked");

    # sleep a bit
    sleep(.25);

    if (`pgrep -f $tmpdir/grun-test.test.conf` =~ /\d+/) {
        `pkill -9 -f $tmpdir/grun-test.test.conf`;
        ok(0, "no stranded childredn");
    } else {
        ok(1, "no stranded childredn");
    }

}

sleep(1);
